version: '2.1'

networks:
#Internal-only network for proper nginx proxying and ssh
  monitor-net:
    driver: bridge
#    enable_ipv6: true
#    internal: false
    ipam:
      driver: default
      config:
        - subnet: 172.22.0.0/16

#networks:
#  monitor-net:
#    driver: bridge

volumes:
    prometheus_data: {}
    grafana_data: {}

services:

  prometheus:
    image: prom/prometheus:v2.35.0
    container_name: prometheus
    volumes:
      - /home/cloud/monitor/prometheus:/etc/prometheus
      - /home/cloud/monitor/prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
      - 9090:9090
#    expose:
#      - 9090
    networks:
      monitor-net:
        ipv4_address: 172.22.0.4
    labels:
      org.label-schema.group: "monitoring"

#  alertmanager:
#    image: prom/alertmanager:v0.20.0
#    container_name: alertmanager
#    volumes:
#      - ./alertmanager:/etc/alertmanager
#    command:
#      - '--config.file=/etc/alertmanager/config.yml'
#      - '--storage.path=/alertmanager'
#    restart: unless-stopped
#    expose:
#      - 9093
#    networks:
#      - monitor-net
#    labels:
#      org.label-schema.group: "monitoring"

#  nodeexporter:
#    image: prom/node-exporter:v0.18.1
#    container_name: nodeexporter
#    volumes:
#      - /proc:/host/proc:ro
#      - /sys:/host/sys:ro
#      - /:/rootfs:ro
#    command:
#      - '--path.procfs=/host/proc'
#      - '--path.rootfs=/rootfs'
#      - '--path.sysfs=/host/sys'
#      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
#    restart: unless-stopped
#    expose:
#      - 9100
#    networks:
#      - monitor-net
#    labels:
#      org.label-schema.group: "monitoring"
#
#  cadvisor:
#    image: gcr.io/google-containers/cadvisor:v0.34.0
#    container_name: cadvisor
#    volumes:
#      - /:/rootfs:ro
#      - /var/run:/var/run:rw
#      - /sys:/sys:ro
#      - /var/lib/docker:/var/lib/docker:ro
#      #- /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
#    restart: unless-stopped
#    expose:
#      - 8080
#    networks:
#      - monitor-net
#    labels:
#      org.label-schema.group: "monitoring"
#
  grafana:
    image: grafana/grafana:8.5.3
    container_name: grafana
    volumes:
      - /home/cloud/monitor/grafana_data:/var/lib/grafana
      - /home/cloud/monitor/grafana:/etc/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=131384
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
      - 3000:3000
      - 389:389
      - 636:636
    dns:
      - 10.125.4.205          
#    expose:
#      - 3000
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  pushgateway:
    image: prom/pushgateway:v1.2.0
    container_name: pushgateway
    restart: unless-stopped
    ports:
      - 9091:9091
#    expose:
#      - 9091
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

#  caddy:
#    image: stefanprodan/caddy
#    container_name: caddy
#    ports:
#      - "3000:3000"
#      - "9090:9090"
#      - "9093:9093"
#      - "9091:9091"
#    volumes:
#      - ./caddy:/etc/caddy
#    environment:
#      - ADMIN_USER=${ADMIN_USER}
#      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
#    restart: unless-stopped
#    networks:
#      - monitor-net
#    labels:
#      org.label-schema.group: "monitoring"
#
